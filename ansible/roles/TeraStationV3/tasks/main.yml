- name: Copy miconapl files (micon V3)
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - {
        "src": miconapl/nas-apps_1.0ubuntu170_amd64.deb,
        "dest": /tmp/nas-apps_1.0ubuntu170_amd64.deb,
      }
    - {
        "src": miconapl/70-buffalo-micon.rules,
        "dest": /etc/udev/rules.d/70-buffalo-micon.rules,
      }
    - { "src": miconapl/update-lcd, "dest": /usr/local/bin/update-lcd }
    - { "src": miconapl/disp-lcd, "dest": /usr/local/bin/disp-lcd }
    - { "src": miconapl/set-led, "dest": /usr/local/bin/set-led }
    - {
        "src": miconapl/50-miconapl-lcd,
        "dest": /etc/networkd-dispatcher/routable.d/50-miconapl-lcd,
      }
    - {
        "src": miconapl/50-miconapl-lcd,
        "dest": /etc/NetworkManager/dispatcher.d/50-miconapl-lcd,
      }
    - {
        "src": miconapl/miconapl.service,
        "dest": /etc/systemd/system/miconapl.service,
      }
  notify: reload-miconapl

- name: Install nas-apps
  ansible.builtin.apt:
    deb: /tmp/nas-apps_1.0ubuntu170_amd64.deb
  notify: reload-miconapl

- name: install packages
  ansible.builtin.apt:
    pkg:
      - python3-serial

- name: copy scripts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
  with_items:
    - { "src":hotswap_enable.sh, "dest":/usr/local/bin/ }
    - { "src":update_boot.sh, "dest":/usr/local/bin/ }

- name: copy hotswap.service
  copy:
    src: hotswap.service
    dest: /etc/systemd/system/
  notify: restart hotswap.service

- name: enable hotswap.service
  systemd:
    name: hotswap.service
    daemon-reload: yes
    state: started
    enabled: yes

- name: create /etc/initramfs-tools/post-update.d/
  file:
    path: /etc/initramfs-tools/post-update.d/
    state: directory
    recurse: yes

- name: create link to update_boot
  file:
    src: /usr/local/bin/update_boot.sh
    dest: /etc/initramfs-tools/post-update.d/update_boot
    state: link
  notify: exec update_boot
