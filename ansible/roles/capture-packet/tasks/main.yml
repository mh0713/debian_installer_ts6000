- name: Install tcpdump
  ansible.builtin.apt:
    name: tcpdump

- name: Install python module nfstream
  ansible.builtin.pip:
    name: nfstream

- name: Create pcap directory
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit)}}"
  with_items:
    - {"path":/mnt/array1/pcap/, "owner":tcpdump, "group":tcpdump }
    - {"path":/mnt/array1/pcap_done/}
    - {"path":/mnt/array1/csv/}
    - {"path":/mnt/array1/csv_done/}
    - {"path":/mnt/array1/csv_merged/}

- name: Copy packet scripts
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - {"src":packet-capture.sh, "dest":/usr/local/sbin/packet-capture.sh}
    - {"src":pcap_rotate.sh, "dest":/usr/local/bin/pcap_rotate.sh}
    - {"src":pcap2csv.py, "dest":/usr/local/bin/pcap2csv.py}
    - {"src":pcap2csv.sh, "dest":/usr/local/bin/pcap2csv.sh}
    - {"src":merge_csv.py, "dest":/usr/local/bin/merge_csv.py}
    - {"src":merge_csv.sh, "dest":/usr/local/bin/merge_csv.sh}
    - {"src":pcap2csv.cron, "dest":/usr/local/bin/pcap2csv.cron}
    - {"src":cores.sh, "dest":/usr/local/bin/cores.sh}

- name: Add PATH
  ansible.builtin.cron:
    name: PATH
    env: yes
    job: "/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

- name: Create cron entry 1
  ansible.builtin.cron:
    name: "start packet capture"
    minute: 0
    hour: 8
    weekday: 1-5
    user: root
    job: "packet-capture.sh -i {{ capture_if }} -h {{ inventory_hostname }}  > /var/log/packet-capture.log 2>&1"
  when: capture_if is defined

- name: Delete cron entry 1
  ansible.builtin.cron:
    name: "start packet capture"
    state: absent
  when: capture_if is not defined

- name: Create cron entry 2
  ansible.builtin.cron:
    name: "analyze capture data"
    minute: 0
    hour: 23
    weekday: 1-5
    user: root
    job: "pcap2csv.cron > /var/log/pcap2csv.log 2>&1"
  when: capture_if is defined

- name: Delete cron entry 2
  ansible.builtin.cron:
    name: "analyze capture data"
    state: absent
  when: capture_if is not defined